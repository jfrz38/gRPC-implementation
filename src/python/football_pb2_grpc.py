# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import football_pb2 as football__pb2


class FootballServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllPlayers = channel.unary_unary(
                '/FootballService/GetAllPlayers',
                request_serializer=football__pb2.Empty.SerializeToString,
                response_deserializer=football__pb2.PlayersList.FromString,
                )
        self.GetPlayer = channel.unary_unary(
                '/FootballService/GetPlayer',
                request_serializer=football__pb2.Id.SerializeToString,
                response_deserializer=football__pb2.Player.FromString,
                )
        self.AddPlayer = channel.unary_unary(
                '/FootballService/AddPlayer',
                request_serializer=football__pb2.Player.SerializeToString,
                response_deserializer=football__pb2.Empty.FromString,
                )
        self.DeletePlayer = channel.unary_unary(
                '/FootballService/DeletePlayer',
                request_serializer=football__pb2.Id.SerializeToString,
                response_deserializer=football__pb2.Empty.FromString,
                )
        self.GetAllTeams = channel.unary_unary(
                '/FootballService/GetAllTeams',
                request_serializer=football__pb2.Empty.SerializeToString,
                response_deserializer=football__pb2.TeamList.FromString,
                )
        self.GetTeam = channel.unary_unary(
                '/FootballService/GetTeam',
                request_serializer=football__pb2.Id.SerializeToString,
                response_deserializer=football__pb2.Team.FromString,
                )
        self.AddTeam = channel.unary_unary(
                '/FootballService/AddTeam',
                request_serializer=football__pb2.Team.SerializeToString,
                response_deserializer=football__pb2.Empty.FromString,
                )
        self.DeleteTeam = channel.unary_unary(
                '/FootballService/DeleteTeam',
                request_serializer=football__pb2.Id.SerializeToString,
                response_deserializer=football__pb2.Empty.FromString,
                )


class FootballServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FootballServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllPlayers,
                    request_deserializer=football__pb2.Empty.FromString,
                    response_serializer=football__pb2.PlayersList.SerializeToString,
            ),
            'GetPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayer,
                    request_deserializer=football__pb2.Id.FromString,
                    response_serializer=football__pb2.Player.SerializeToString,
            ),
            'AddPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlayer,
                    request_deserializer=football__pb2.Player.FromString,
                    response_serializer=football__pb2.Empty.SerializeToString,
            ),
            'DeletePlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePlayer,
                    request_deserializer=football__pb2.Id.FromString,
                    response_serializer=football__pb2.Empty.SerializeToString,
            ),
            'GetAllTeams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTeams,
                    request_deserializer=football__pb2.Empty.FromString,
                    response_serializer=football__pb2.TeamList.SerializeToString,
            ),
            'GetTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTeam,
                    request_deserializer=football__pb2.Id.FromString,
                    response_serializer=football__pb2.Team.SerializeToString,
            ),
            'AddTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTeam,
                    request_deserializer=football__pb2.Team.FromString,
                    response_serializer=football__pb2.Empty.SerializeToString,
            ),
            'DeleteTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTeam,
                    request_deserializer=football__pb2.Id.FromString,
                    response_serializer=football__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FootballService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FootballService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/GetAllPlayers',
            football__pb2.Empty.SerializeToString,
            football__pb2.PlayersList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/GetPlayer',
            football__pb2.Id.SerializeToString,
            football__pb2.Player.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/AddPlayer',
            football__pb2.Player.SerializeToString,
            football__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/DeletePlayer',
            football__pb2.Id.SerializeToString,
            football__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/GetAllTeams',
            football__pb2.Empty.SerializeToString,
            football__pb2.TeamList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/GetTeam',
            football__pb2.Id.SerializeToString,
            football__pb2.Team.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/AddTeam',
            football__pb2.Team.SerializeToString,
            football__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FootballService/DeleteTeam',
            football__pb2.Id.SerializeToString,
            football__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
